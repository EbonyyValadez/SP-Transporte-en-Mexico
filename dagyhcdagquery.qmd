---
title: "Base de datos a categórica"
format: 
    html:
     toc: true
     html-math-method: katex
     embed-resources: true
     self-contained-math: true
     df-print: kable
editor: source
---

```{r}
library(bnlearn)
library(readr)
```

```{r}
datos=read.csv("~/SP-Transporte-en-Mexico/data_corregido.csv",stringsAsFactors = TRUE)
head(datos)
```
```{r}
# Sexo
datos$S <- factor(datos$S,
                  levels = c(1, 2),
                  labels = c("Hombre", "Mujer"))

# Transporte
datos$T <- factor(datos$T,
                  levels = 1:20,
                  labels = c("Auto", "Colectivo", "TaxiApp", "TaxiCalle",
                             "Metro", "RTP_M1", "Bici", "Autobus",
                             "Moto", "Trolebus", "Metrobús",
                             "TrenLigero", "Suburbano", "Caminar",
                             "Mexicable", "Bicitaxi", "Mototaxi",
                             "Escolar", "Personal", "Otro"))

# Estrato
datos$EST <- factor(datos$EST,
                    levels = 1:4,
                    labels = c("Bajo", "MedioBajo", "MedioAlto", "Alto"))

# Día de viaje
datos$D <- factor(datos$D,
                  levels = c(1, 2),
                  labels = c("Semana", "FinSemana"))

# Entidad
datos$O <- factor(datos$O,
                  levels = c(9, 13, 15),
                  labels = c("CDMX", "Hidalgo", "Edomex"))

# Localidad
datos$L <- factor(datos$L,
                  levels = 1:4,
                  labels = c("Loc_100k+", "Loc_15k_99k", "Loc_2.5k_14k", "Loc_menor2.5k"))

# Autos disponibles
datos$V <- factor(datos$V,
                  levels = 0:8,
                  labels = paste0("Autos_", 0:8))

# Escolaridad
datos$ESC <- factor(datos$ESC,
                    levels = c(0:9, 99),
                    labels = c("Ninguno", "Preescolar", "Primaria", "Secundaria",
                               "CarrTecSec", "NormalBas", "Prepa", "CarrTecPrepa",
                               "Licenciatura", "Posgrado", "NoSabe"))

# Edad categorizada
datos$A <- factor(datos$A,
                  levels = 1:4,
                  labels = c("Joven", "Adulto", "MedianaEdad", "AdultoMayor"))

# Tiempo de viaje (0 = menos de 1h, cualquier otro valor = 1h o más)
datos$H <- ifelse(datos$H == 0, 0, 1)
datos$H <- factor(datos$H,
                  levels = c(0, 1),
                  labels = c("Menos1h", "1homas"))


# Confirmar que todas son factores
sapply(datos, class)

```

```{r}
dag1 = empty.graph(nodes = c("A", "D", "EST", "V", "L", "H", "O", "ESC","S","T"))
```
```{r}
arc_set1 = matrix(c("A","ESC",
                   "ESC","EST",
                   "EST","V",
                   "V","T",
                   "T","H",
                   "S","T",
                   "D","T",
                   "O","L",
                   "L","EST",
                   "L","H"), 
                 byrow = TRUE, ncol = 2,
                 dimnames = list(NULL, c("from","to")))
```
```{r}
arcs(dag1) = arc_set1
```
```{r}
dag1
```
```{r}
arc.strength(dag1, data = datos, criterion = "mi")
```
```{r}
bn=bn.fit(dag1,data=datos)

```
```{r}
cpquery(bn,
        event = (T %in% c("Auto", "Moto")),
        evidence = (S == "Hombre" & A %in% c("MedianaEdad","AdultoMayor") &
                    EST == "MedioBajo" & D == "Semana"),
        n = 10^6)
```
```{r}
best_dag = hc(datos)
```
```{r}
bn=bn.fit(best_dag,data=datos)
```
```{r}
cpquery(bn,
        event = (T %in% c("Auto", "Moto")),
        evidence = (S == "Hombre" & A %in% c("MedianaEdad","AdultoMayor") &
                    EST == "MedioBajo" & D == "Semana"),
        n = 10^6)

```
```{r}
score(best_dag, data = datos, type = "bic")
```
```{r}
score(best_dag, data = datos, type = "aic")
```



